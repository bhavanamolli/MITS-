# Certificate Verification Service - Backend Logic

from flask import Flask, request, jsonify
from pymongo import MongoClient
from bson.objectid import ObjectId
from flask_cors import CORS
import os

app = Flask(_name_)
CORS(app)  # Enable CORS for frontend integration

# MongoDB setup
MONGO_URI = os.getenv("MONGO_URI", "mongodb://localhost:27017/")
client = MongoClient(MONGO_URI)
db = client['certificate_db']
certificates_collection = db['certificates']

# Route to verify certificate by unique ID
@app.route('/verify-certificate/<cert_id>', methods=['GET'])
def verify_certificate(cert_id):
    try:
        certificate = certificates_collection.find_one({"certificate_id": cert_id})
        if certificate:
            result = {
                "name": certificate["name"],
                "college": certificate["college"],
                "domain": certificate["domain"],
                "duration": certificate["duration"],
                "issue_date": certificate["issue_date"]
            }
            return jsonify({"status": "success", "data": result}), 200
        else:
            return jsonify({"status": "error", "message": "Certificate not found"}), 404
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

if _name_ == '_main_':
    app.run(debug=True)